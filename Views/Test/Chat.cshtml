@using genetrix.Models;
@model genetrix.Models.Chat;
@{
    ViewBag.Title = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string userName = User.Identity.Name;
}
@Html.Partial("~/Views/_Shared/_head_css.cshtml")
<style>
    .left-bg{
        background-color:#7ec5f8;
    }
</style>
<div class="d-lg-flex mb-4">
    <div class="w-100 user-chat mt-4 mt-sm-0 ms-lg-1">
        <div class="px-lg-2">
            <div class="chat-conversation p-0">
                <ul class="list-unstyled mb-0" id="discussion" data-simplebar style="">
                    <li class="chat-day-title">
                        <div class="title">Aujourd'hui</div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<a href="#footer-pan" class="hidden" id="link-footer">content</a>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>
    @*<script src="~/Scripts/jquery.signalR-2.1.0.min.js"></script>*@
    <!--Reference the autogenerated SignalR hub script. -->
    @*<script src="~/Scripts/realTime.js"></script>*@
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        var userName = '@(Session["userName"])';
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message,statut) {
                // Add the message to the page.
                var right = "";
                var bgr = "";
                if (name == userName) {
                    right = "right";
                } else {
                    bgr = "left-bg";
                }
                let hour = getHour();
                var li = "<li class=\"" + right +"\">"
                    + "<div class=\"conversation-list\">"
                    + "<div class=\"ctext-wrap\">"
                    + "<div class=\"ctext-wrap-content\">"
                    + "<h5 class=\"font-size-14 conversation-name\">" + "<a href=\"#\" class=\"text-dark\">" + name + "</a>" + "<span class=\"d-inline-block font-size-12 text-muted ms-2\">" + hour + "</span ></h5 > "
                    + "<p class=\"mb-0\">"
                    + message
                    + "</p>"
                    + "</div>"
                    + "<div class=\"dropdown align-self-start\">"
                    + "<a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">"
                    +"..."
                    + "<i class=\"uil uil-ellipsis-v\"></i>"
                    + "</a>"
                    + "<div class=\"dropdown-menu\">"
                    + "<a class=\"dropdown-item\" href=\"#\">Copy</a>"
                    + "<a class=\"dropdown-item\" href=\"#\">Save</a>"
                    + "<a class=\"dropdown-item\" href=\"#\">Forward</a>"
                    + "<a class=\"dropdown-item\" href=\"#\">Delete</a>"
                    + "</div>"
                    + "</div>"
                    + "</div>"
                    + "</div>"
                    + "</li>";
                $('#discussion').append(li);

                //$('#discussion').append('<li><strong>' + htmlEncode(name)
                //    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            $('#displayname').val("ddd");
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            let scroly = 0;
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send(userName, $('#message').val(),'11');
                    // Clear text box and reset focus for next comment.
                    document.getElementById('link-footer').click();
                    $('#message').val('').focus();
                    var bc = document.getElementById('body-content');
                    scroly += document.body.offsetHeight + 100;
                    bc.scrollTo(0, scroly);
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function getHour() {
            function addZero(i) {
                if (i < 10) { i = "0" + i }
                return i;
            }

            const d = new Date();
            let h = addZero(d.getHours());
            let m = addZero(d.getMinutes());
            let s = addZero(d.getSeconds());
            return h + ":" + m + ":" + s;
        }
    </script>
}
@*@Html.Partial("~/Views/_Shared/_Script_DataList.cshtml")*@
<script src="~/assets/libs/jquery/jquery.min.js"></script>
<script src="~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/assets/libs/metismenu/metisMenu.min.js"></script>
<script src="~/assets/libs/simplebar/simplebar.min.js"></script>
<script src="~/assets/libs/node-waves/waves.min.js"></script>
<script src="~/assets/libs/waypoints/lib/jquery.waypoints.min.js"></script>
<script src="~/assets/libs/jquery.counterup/jquery.counterup.min.js"></script>

<script src="~/assets/js/app.js"></script>