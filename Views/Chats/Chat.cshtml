@using genetrix.Models;
@model genetrix.Models.Chat
@{
    ViewBag.Title = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string userName = (string)Session["userName"];
}
@Html.Partial("~/Views/_Shared/_head_css.cshtml")
<style>
    .left-bg {
        background-color: #7ec5f8;
    }
</style>
<div class="d-lg-flex mb-4">
    <div class="w-100 user-chat mt-4 mt-sm-0 ms-lg-1">
        <div class="px-lg-2">
            <div class="chat-conversation p-0">
                <ul class="list-unstyled mb-0" id="discussion" data-simplebar style="">
                    <li class="chat-day-title">
                        <div class="title">@((DateTime.Now-Model.DateHeure).Value.Days<1?"Aujourd'hui": Model.DateHeure.Value.ToString("dd/MM/yyyy"))</div>
                    </li>
                    <li class="right">
                        <div class="conversation-list">
                            <div class="ctext-wrap">
                                <div class="ctext-wrap-content">
                                    <h5 class="font-size-14 conversation-name"><a href="#" class="text-dark">@Model.Emetteur.NomComplet</a> <span class="d-inline-block font-size-12 text-muted ms-2">@Model.DateHeure.Value.Hour:@Model.DateHeure.Value.Minute:@Model.DateHeure.Value.Second </span></h5>
                                    <p class="mb-0" style="font-weight:bold;color:green">
                                        @Model.Sujet
                                    </p>
                                </div>
                            </div>
                        </div>
                    </li>
                    @{
                        string right = "";
                        try
                        {
                            foreach (var item in Model.Contenu)
                            {
                                try
                                {
                                    right = "";
                                    if (item.EmetteurName == userName)
                                    {
                                        right = "right";
                                    }
                                    <li class="@right">
                                        <div class="conversation-list">
                                            <div class="ctext-wrap">
                                                <div class="ctext-wrap-content">
                                                    <h5 class="font-size-14 conversation-name"><a href="#" class="text-dark">@item.EmetteurName</a> <span class="d-inline-block font-size-12 text-muted ms-2">@item.Date.Hour:@item.Date.Minute:@item.Date.Second </span></h5>
                                                    <p class="mb-0">
                                                        @(item.Text) <br />
                                                        @Html.Raw(item.LienImage)
                                                    </p>
                                                </div>
                                            </div>
                                        </div>

                                    </li>
                                }
                                catch (Exception)
                                { }
                            }
                        }
                        catch (Exception)
                        { }
                    }
                    <li style="text-align: left; background-color: red; display: none" id="typing-text">
                        <img src="~/assets/images/IU/typing-text2.gif" alt="" style="width: 70px;" />
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
@*@Html.Partial("~/Views/Chats/script.cshtml")*@

<a href="#footer-pan" class="hidden" id="link-footer"></a>
<a href="#" class="hidden" id="close-chat"></a>
<a href="#" class="hidden" id="show-modal-choix" data-bs-toggle="modal" data-bs-target="#modal-choix"></a>
@Html.Partial("~/Views/Chats/Modal_ChoixStatut.cshtml")

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    @*<script src="~/Scripts/jquery.signalR-2.1.0.min.js"></script>*@
    <!--Reference the autogenerated SignalR hub script. -->
    @*<script src="~/Scripts/realTime.js"></script>*@
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        var userName = '@(Session["userName"])';
        var userId = '@(Session["userId"])';
        //alert(document.getElementById('chat-panel') + " - " + document.getElementById('alert-entete'))
        //($el.css('position') == 'fixed');
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            var typingText = document.getElementById('typing-text');
            chat.client.addNewMessageToPage = function (name, message, statut, rk4, Contenu, loading, imagePath) {
                // Add the message to the page.
                if (rk4.includes(userId)) {
                    var right = "";
                    var bgr = "";
                    if (name == userName) {
                        right = "right";
                    } else {
                        bgr = "left-bg";
                    }
                    if (!loading || name == userName) {
                        typingText.style.display = 'none';
                    } else {
                        typingText.style.display = 'initial';
                    }
                    if (message || imagePath) {
                        let hour = getHour();
                        var li = //"<li class=\"" + right + "\">"
                            "<div class=\"conversation-list\">"
                            + "<div class=\"ctext-wrap\">"
                            + "<div class=\"ctext-wrap-content\">"
                            + "<h5 class=\"font-size-14 conversation-name\">" + "<a href=\"#\" class=\"text-dark\">" + name + "</a>" + "<span class=\"d-inline-block font-size-12 text-muted ms-2\">" + hour + "</span ></h5 > "
                            + "<p class=\"mb-0\">"
                            + message+"<br/>"
                            + imagePath
                            + "</p>"
                            + "</div>"
                            + "<div class=\"dropdown align-self-start\">"
                            + "<a class=\"dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">"
                            + "..."
                            + "<i class=\"uil uil-ellipsis-v\"></i>"
                            + "</a>"
                            + "<div class=\"dropdown-menu\">"
                            + "<a class=\"dropdown-item\" href=\"#\">Copy</a>"
                            + "<a class=\"dropdown-item\" href=\"#\">Save</a>"
                            + "<a class=\"dropdown-item\" href=\"#\">Forward</a>"
                            + "<a class=\"dropdown-item\" href=\"#\">Delete</a>"
                            + "</div>"
                            + "</div>"
                            + "</div>"
                            + "</div>";
                            //+ "</li>";
                        var _li = document.createElement('li');
                        _li.setAttribute('class', right);
                        _li.innerHTML = li;
                        typingText.parentNode.insertBefore(_li, typingText);
                        document.getElementById('link-footer').click();
                    }
                }
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            //$('#displayname').val("ddd");
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            let scroly = 0;
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send(userName, $('#message').val(), '@Model.ChatId', userId,"",false,"client",0);
                    // Clear text box and reset focus for next comment.
                    document.getElementById('link-footer').click();
                    $('#message').val('').focus();
                    var bc = document.getElementById('body-content');
                    scroly += document.body.offsetHeight + 100;
                    bc.scrollTo(0, scroly);
                });

                 //entrain d'ecrire
                var messageVal = $('#message').val();
                $.connection.hub.start().done(function () {
                    document.getElementById('message').addEventListener('input', function () {
                        if (messageVal != this.value) {
                            // Call the Send method on the hub.
                            chat.server.send(userName, "", '@Model.ChatId', userId,"",true,"client",0);
                        } else {
                            // Call the Send method on the hub.
                            chat.server.send(userName, "", '@Model.ChatId', userId, "", false, "client",0);
                        }
                    });
                });

                //Envoi d'un fichier
                try {
                    document.getElementById("ficher-inp").onchange = evt => {
                        const [file] = evt.target.files;
                        if (file) {
                            var formData = new FormData();
                            formData.append("image", file);
                            formData.append("idchat", '@Model.ChatId');

                            $.ajax({
                                url: '@Url.Content("~/chats/TelechargeFichierClient/")',
                                type: "POST",
                                contentType: false,
                                processData: false,
                                data: formData,
                                success: function (response) {
                                    try {
                                        chat.server.send(userName, response.url, '@Model.ChatId', userId, "", false, "client", response.imageId);
                                        // Clear text box and reset focus for next comment.
                                        document.getElementById('link-footer').click();
                                        $('#message').val('').focus();
                                        var bc = document.getElementById('body-content');
                                        scroly += document.body.offsetHeight + 100;
                                        bc.scrollTo(0, scroly);
                                    } catch (e) {

                                    }
                                }, error: function (er) {
                                }
                            });
                        }
                    }
                } catch (e) {

                }

            });

        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function getHour() {
            function addZero(i) {
                if (i < 10) { i = "0" + i }
                return i;
            }

            const d = new Date();
            let h = addZero(d.getHours());
            let m = addZero(d.getMinutes());
            let s = addZero(d.getSeconds());
            return h + ":" + m + ":" + s;
        }
    </script>
}
@*@Html.Partial("~/Views/_Shared/_Script_DataList.cshtml")*@
<script src="~/assets/libs/jquery/jquery.min.js"></script>
<script src="~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/assets/libs/metismenu/metisMenu.min.js"></script>
<script src="~/assets/libs/simplebar/simplebar.min.js"></script>
<script src="~/assets/libs/node-waves/waves.min.js"></script>
<script src="~/assets/libs/waypoints/lib/jquery.waypoints.min.js"></script>
<script src="~/assets/libs/jquery.counterup/jquery.counterup.min.js"></script>

<script src="~/assets/js/app.js"></script>

<script>
    try {
        var estFerme = '@(Model.Statut==StatutChat.Fermé)';
         if (estFerme == 'True') {
            $('.chat-act').attr("disabled", "disabled");
        }

    } catch (e) {

    }
    $('#reduire-pan-chat').attr('title','Reduire la fenêtre')
    $('#close-pan-chat').attr('title','Fermer le chat')
    $('#reduire-pan-chat').click(function () {
        window.parent.document.getElementById('ifram-livechat').parentElement.style.display = 'none';
    });

    $('#close-pan-chat').click(function () {
        if (confirm('Vous êtes sur le point de fermer cette discussion. Voulez-vous confirmer l\'action?')) {
            document.getElementById('show-modal-choix').click();
        } else {
        //    window.parent.document.getElementById('ifram-livechat').parentElement.style.display = 'none';
        }
    });

    $('.ferme-chat').click(function () {
        if (this.id == "bt-termier") {
            var radios = document.getElementsByName('radioSituation');
            var situation = "";
            for (var i = 0; i < radios.length; i++) {
                if (radios[i].checked) {
                    situation = radios[i].getAttribute('id');
                }
            }
            var _url = '@Url.Content("~/Chats/Ferme?id="+Model.ChatId)' + '&situation=' + situation;
            $('#close-chat').attr('href', _url);
            document.getElementById('close-chat').click();
            //ferme la fenetre
            window.parent.document.getElementById('ifram-livechat').parentElement.style.display = 'none';
        } else {
            window.parent.document.getElementById('ifram-livechat').parentElement.style.display = 'none';
        }
    });

</script>