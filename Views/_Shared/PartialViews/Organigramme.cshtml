@model genetrix.Models.Banque
@{
    var colspan = Model.DirectionMetiers != null ? Model.DirectionMetiers.Count : 0;
}
<style>
    .point {
        /*        width: 284px;
    */ padding: 10px 10px 20px 10px;
        border: 1px solid #BFBFBF;
        background-color: white;
        box-shadow: 10px 10px 5px #aaaaaa;
    }

    .table2 {
        margin-left: auto;
        margin-right: auto;
        width: 100%;
        table-layout: fixed;
        border: 1px solid #b6d7f5;
    }

    td1 {
        border: 1px solid #808080;
        text-align: center;
        padding: 40px;
        margin-bottom: 30px
    }
</style>
<div class="card" style="height:100%">
    <div class="card-header card-header1 text-white">Structure de la banque</div>
    <div class="card-body" style="height:100%;padding:20px">
        <canvas id="canvas" style="border:2px solid black; width:100%;height:100%;display:none"></canvas>
        @{
            if (Model != null)
            {
                <div class="table-responsive">
                    <table style="text-align:center;width:100%" border="1" id="table-init">
                        @{
                            if (!Model.ConfigPersonnel)
                            {
                                <tr><th style="text-align:center;height:50px" colspan="@colspan"><span class="btn">0</span>  <a id="banque" href="@Url.Content("~/banques/edit/"+Model.Id)" style="color:blue;z-index:40;margin-left:-10px" class="point">@Model.Nom</a></th></tr>
                                <tr>
                                    <th colspan="@colspan">
                                        <svg id="svg" style="border:dotted 1px #808080;height:20px;width:100%;z-index:10">
                                        </svg>
                                    </th>
                                </tr>
                                <tr>
                                    <th colspan="@colspan">
                                        <table style="width:100%;">
                                            <tr>
                                                <th style="text-align:center;height:50px;" colspan="@colspan">
                                                    &emsp;&emsp;   <span class="btn">1</span>   <a id="banque" href="@Url.Content("~/conformites/details?id=0100")" style="color:blue;z-index:40;padding-right:10px" class="point bg-gradient-pink">Conformité</a>
                                                    <a id="banque" href="@Url.Content("~/servicetransferts/details?id=0200")" style="color:blue;z-index:40" class="point bg-gradient-pink">Service transfert</a> <span class="btn">1</span>
                                                </th>
                                            </tr>
                                        </table>
                                    </th>
                                </tr>
                                <tr>
                                    <th colspan="@colspan">
                                        <svg id="svg" style="border:dotted 1px #808080;height:20px;width:100%;z-index:10">
                                        </svg>
                                    </th>
                                </tr>
                                <tr style="padding-top:35px;height:70px">
                                    @{
                                        int i = 0;
                                        foreach (var dd in Model.DirectionMetiers)
                                        {
                                            i++;
                                            <th>
                                                <div class="card1">
                                                   <span class="btn">2</span>  
                                                    <a id="diresction_@i" href="@Url.Content("~/DirectionMetiers/details/"+dd.Id)" class="point bg-gradient-info text-white banque" style="margin-bottom:70px;z-index:40">@dd.Nom</a>
                                                    <hr />
                                                    <table border="0" class="table2" style="padding:0px;margin:0px;margin-top:-20px">
                                                        <tr>
                                                            <th colspan="@(dd.Agences.Count)">
                                                                <svg id="svg" style="height:10px;width:100%;z-index:10">
                                                                </svg>
                                                            </th>
                                                        </tr>
                                                        <tr style="padding:0px">
                                                            @{int j = 0;
                                                                foreach (var ag in dd.Agences)
                                                                {
                                                                    <td style="padding:0px;padding-top:-15px">
                                                                        <span class="btn">3</span> 
                                                                        <a id="agence_@j" direction="diresction_@i" href="@Url.Content("~/agences/details/"+ag.Id)" class="btn bg-gradient-warning diresction_@i point" style="margin:0px;margin-top:-10px;margin-bottom:5px;white-space: normal">@ag.Nom</a>
                                                                    </td>
                                                                }
                                                            }
                                                        </tr>
                                                    </table>
                                                </div>
                                            </th>
                                        }


                                    }
                                </tr>
                            }
                            else
                            {
                                @*foreach (var item in ViewData["structures"] as List<genetrix.Models.Structure>)
                                {
                                    <tr><th style="text-align:center;height:50px" colspan="@colspan"><a id="banque" href="@Url.Content("~/banques/details/"+Model.Id)" style="color:blue;z-index:40" class="point">@Model.Nom</a></th></tr>

                                }*@
                            }
                        }
                    </table>
                </div>
            }
        }
    </div>
</div>
<script>
    //liaison banque-directions
    var svg = document.getElementById("svg");
    var banque = document.getElementById("banque");

    //var newLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');
    //newLine.setAttribute('id', 'line2');
    //newLine.setAttribute('x1', '' + getOffset(banque).left);
    //newLine.setAttribute('y1', '' + getOffset(banque).top);
    //newLine.setAttribute('x2', '200');
    //newLine.setAttribute('y2', '200');
    //newLine.setAttribute("stroke", "black");
    //svg.append(newLine);

    var directs = document.getElementsByClassName("banque");
    for (var i = 0; i < directs.length; i++) {

        var newLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');
        newLine.setAttribute('id', 'line' + i);
        newLine.setAttribute('x1', '' + getOffset2(banque).left);
        newLine.setAttribute('y1', '0');
        newLine.setAttribute('x2', '' + getOffset2(directs[i]).left);
        newLine.setAttribute('y2', '' + getOffset2(directs[i]).top);
        newLine.setAttribute("stroke", "white");
        svg.append(newLine);
        //var left= directs[i].le + directs[i].offsetWidth / 2
        //alert(getOffset2(directs[i]).left + " - " + left + " ; " + directs[i].textContent);
    }

    // alert(getOffset(document.getElementsByClassName("banque")[0]).top);


    function getOffset2(el) {
        const rect = el.getBoundingClientRect();
        return {
            left: rect.left + window.scrollX,
            top: rect.top + window.scrollY
        };
    }
    function getOffset(el) {
        const rect = el.getBoundingClientRect();
        return {
            left: rect.left + window.scrollX,
            top: rect.top + window.scrollY
        };
    }
</script>

<script>
    var canvas = document.getElementById("canvas");
    var tabContent = document.getElementById("table-init").outerHTML;
    var ctx = canvas.getContext("2d");
    var data = "<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='100%'>" +
        "<foreignObject width='100%' height='100%'>" +
        "<div xmlns='http://www.w3.org/1999/xhtml' style='font-size:10px'>" +
        tabContent +
        "</div>" +
        "</foreignObject>" +
        "</svg>";
    var DOMURL = self.URL || self.webkitURL || self;
    var img = new Image();
    var svg = new Blob([data], { type: "image/svg+xml;charset=utf-8" });
    var url = DOMURL.createObjectURL(svg);
    img.onload = function () {
        ctx.drawImage(img, 0, 0);
        DOMURL.revokeObjectURL(url);
    };
    img.src = url;
</script>

