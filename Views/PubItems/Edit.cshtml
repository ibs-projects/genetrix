@model genetrix.Models.PubItem
@{
    ViewBag.Title = "Edition de la publication";
    ViewBag.pTitle = "Edition de la publication";
    ViewBag.pageTitle = "Edition de la publication";
    ViewBag.pageImage = "~/assets/images/IU/client.png";
}
@Html.Partial("~/Views/_Shared/_head_css.cshtml")


<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header card-header1">Edition de la publication</div>
            <div class="card-body">
                <div class="col-lg-12">
                    <form action="~/PubItems/edit" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Id)
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Titre, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @class = "form-control", id = "titre" } })
                                    @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.Bottom, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Bottom, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Bottom, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.Left, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Left, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Left, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.Rigth, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Rigth, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Rigth, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.Top, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Top, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Top, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.DureeApp, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.DureeApp, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DureeApp, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.DuréeAtt, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.DuréeAtt, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DuréeAtt, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.DateDebut, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.DateDebut, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DateDebut, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.DateFin, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.DateFin, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DateFin, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.HeureDebut, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.HeureDebut, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.HeureDebut, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                 <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.HeureFin, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.HeureFin, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.HeureFin, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <div class="row">
                                        <div class="form-group col-md-10 mb-3">
                                            @Html.LabelFor(model => model.ePubItemType, htmlAttributes: new { @class = "control-label" })
                                            <div class="col-md-12">
                                                @Html.EnumDropDownListFor(model => model.ePubItemType, htmlAttributes: new { @class = "form-control", id = "ePubItemType" })
                                                @Html.ValidationMessageFor(model => model.ePubItemType, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group  col-md-2">
                                            @Html.LabelFor(model => model.IsHtml, htmlAttributes: new { @class = "control-label" })
                                            <div class="col-md-12">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.IsHtml, new { id = "IsHtml" })
                                                    @Html.ValidationMessageFor(model => model.IsHtml, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="form-group  col-md-6 mb-3">
                                    @Html.LabelFor(model => model.Theme, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        <div class="">
                                            <select class="form-control" id="themes" name="Theme">
                                                <option value="@Model.Theme">@Model.Theme</option>
                                                @{
                                                    try
                                                    {
                                                        foreach (var item in ViewBag.Themes)
                                                        {
                                                            <option id="@item.Id">@item.Nom</option>
                                                        }
                                                    }
                                                    catch (Exception)
                                                    { }
                                                }
                                            </select>
                                            @Html.ValidationMessageFor(model => model.Theme, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.TitreColor, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        @*@Html.EditorFor(model => model.TitreColor, new { htmlAttributes = new { @class = "form-control",id="titre-color" } })*@
                                        <input type="color" style="height:45px;width:70%" name="TitreColor" id="TitreColor" value="@Model.TitreColor" />
                                        @Html.ValidationMessageFor(model => model.TitreColor, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group col-md-6 mb-3">
                                    @Html.LabelFor(model => model.DescriptionColor, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-12">
                                        <input type="color" style="height:45px;width:70%" name="DescriptionColor" id="DescriptionColor" value="@Model.DescriptionColor" />
                                        @*@Html.EditorFor(model => model.DescriptionColor, new { htmlAttributes = new { @class = "form-control",id="desc-color" } })*@
                                        @Html.ValidationMessageFor(model => model.DescriptionColor, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                        <div class="col-md-12">
                                            @Html.TextAreaFor(model => model.Description, 5, 50, new { @class = "form-control", id = "desciption" })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-12 mt-3">
                                            <div class="checkbox">
                                                @Html.LabelFor(model => model.Acive, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Acive, new { id = "Acive" })
                                                @Html.ValidationMessageFor(model => model.Acive, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
                                        <div class="col-md-12">
                                            <input type="file" name="Image" id="image" value="" accept="image/png, image/gif, image/jpeg,video/*" />
                                            @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                @Html.Partial("~/Views/Pubs/StyleCardcontent.cshtml")
                                <div class="col-md-6 card" id="iframe-panel" style="overflow-x:scroll;display:none;background-color:whitesmoke">
                                    <div src="" id="pan-theme" style="border:none;background-color:white;margin:10px" class="card-body"></div>
                                    @*<iframe src="" id="iframe-theme" style="height:450px;width:450px;border:none;background-color:black" class="form-control"></iframe>*@
                                </div>
                            </div>

                            <div class="form-group mb-3 hidden">
                                @Html.LabelFor(model => model.IdePub, "IdePub", htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.DropDownList("IdePub", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IdePub, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <hr />
                            <div class="form-group mb-3">
                                <div class="col-md-offset-2 col-md-12">
                                    <input type="submit" value="Enregistrer" id="enregistrer" class="btn btn-primary" />
                                </div>
                            </div>
                        </div>
                    </form>

                </div>
            </div>
        </div>

        <div>
            @Html.ActionLink("Liste", "Index")
        </div>
    </div>
    <!-- end col -->
</div>
<div id="test" style="display:none"></div>

@Html.Partial("~/Views/_Shared/_Script_DataList.cshtml")
@{ 
    if (!string.IsNullOrEmpty(Model.Theme))
    {
        <script>
            try {
                vewTheme();
            } catch (e) {

            }
        </script>
    }
}
<script>
    $('#image').on("change",function () {
        document.getElementById('enregistrer').click();
    });
    $('input,#themes,#desciption').on('change', function () {
        vewTheme();
    });
    vewTheme();
    function vewTheme() {
         document.getElementById('iframe-panel').style.display='initial';
        document.getElementById('iframe-theme').setAttribute('src', '');
        var textColor = $("#TitreColor").val().replace('#', '-');
        var descColor = $("#DescriptionColor").val().replace('#', '-');
        document.getElementById('iframe-theme').setAttribute('src', '@Url.Content("~/pubs/themes?idPubItem="+Model.Id)' + '&themeName=' + $('#themes').val() + "&width=450&heigth=350&desc=" + $("#desciption").val() + "&titre=" + $("#titre").val() + "&titreColor=" + textColor + "&descriptionColor=" + descColor);
    }
</script>
<script>
    $('#test').load('@Url.Content("~/Pubs/GetPubCard?id="+ Model.Id)' + '&predur=100', function (e) {
        $('#pan-theme').append(e);
    });
</script>
<script>
    $('#ePubItemType').on('change', function () {
        ePubType();
    });
    ePubType();
    function ePubType(elt) {
        if ($('#ePubItemType').val() != 0 && $('#ePubItemType').val() != 1) {
            document.getElementById('IsHtml').disabled = true;
            document.getElementById('themes').disabled = true;
        } else {
            document.getElementById('IsHtml').disabled = false;
            document.getElementById('themes').disabled = false;
        }
    }
</script>