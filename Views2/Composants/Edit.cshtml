@model genetrix.Models.Composant
@{
    ViewBag.Title = "Composant";
    ViewBag.pTitle = "Edition du composant";
    ViewBag.pageTitle = "Composant";
    // ViewBag.pageImage = "~/assets/images/IU/bank.png";
}
<link href="~/assets/libs/magnific-popup/magnific-popup.css" rel="stylesheet" type="text/css" />

@Html.Partial("~/Views/_Shared/_head_css.cshtml")

<div class="row">
    <div class="col-lg-12">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="card">

                <div class="card-body">
                    <div class="form-horizontal">
                        <h4>Composant</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group mb-3 col-lg-6">
                                @Html.LabelFor(model => model.NumeroMin, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.NumeroMin, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumeroMin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group mb-3 col-lg-6">
                                @Html.LabelFor(model => model.NumeroMax, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.NumeroMax, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumeroMax, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group mb-3 col-lg-6">
                                @Html.LabelFor(model => model.NumDiscontinue, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    <input type="text" name="NumDiscontinue"  placeholder="@Model.DiscontinusString" value="@Model.NumDiscontinue" class="form-control" />
                                    @Html.ValidationMessageFor(model => model.NumDiscontinue, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group mb-3 col-lg-6">
                                @Html.LabelFor(model => model.DiscontinusString, htmlAttributes: new { @class = "control-label" })
                                <div class="col-md-12">
                                    <input type="text" name="DiscontinusString" readonly="readonly" value="@Model.DiscontinusString" class="form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.EstActif, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EstActif)
                                    @Html.ValidationMessageFor(model => model.EstActif, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Localistion, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                @Html.EnumDropDownListFor(model => model.Localistion, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Localistion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdGroupe, "IdGroupe", htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                @Html.DropDownList("IdGroupe", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdGroupe, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdAction, "IdAction", htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                @Html.DropDownList("IdAction", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdAction, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdGroupeDisposionAccueil, "IdGroupeDisposionAccueil", htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                @Html.DropDownList("IdGroupeDisposionAccueil", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdGroupeDisposionAccueil, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Recherche, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Recherche, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Recherche, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
                <div class="card-footer">
                    <button type="submit" value="Enregistrer" class="btn btn-outline-info" style="float:right!important;padding-right:10px!important">
                        <i class="far fa-save me-2"></i>
                        Enrégistrer
                    </button>
                    <p>
                        @Html.ActionLink("Voir la liste", "Index")
                    </p>
                </div>
            </div>
        }
    </div>

</div>


<script src="~/assets/libs/jquery/jquery.min.js"></script>
<script src="~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/assets/libs/metismenu/metisMenu.min.js"></script>
<script src="~/assets/libs/simplebar/simplebar.min.js"></script>
<script src="~/assets/libs/node-waves/waves.min.js"></script>
<script src="~/assets/libs/waypoints/lib/jquery.waypoints.min.js"></script>
<script src="~/assets/libs/jquery.counterup/jquery.counterup.min.js"></script>
@*jquery step*@
<script src="~/assets/libs/jquery-steps/build/jquery.steps.min.js"></script>
@*form wizard init*@
<script src="~/assets/js/pages/form-wizard.init.js"></script>

<!-- form repeater js -->
<script src="~/assets/libs/jquery.repeater/jquery.repeater.min.js"></script>

<script src="~/assets/js/pages/form-repeater.int.js"></script>
<!-- Magnific Popup-->
<script src="~/assets/libs/magnific-popup/jquery.magnific-popup.min.js"></script>

<!-- lightbox init js-->
<script src="~/assets/js/pages/lightbox.init.js"></script>

<script src="~/assets/js/app.js"></script>

